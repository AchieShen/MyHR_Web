
@model IEnumerable<MyHR_Web.ViewModel.SalaryChar_Json>
@using MyHR_Web.ViewModel
@using Newtonsoft.Json;
@{

    var table = Model.ToList();

    var Name = table[0].name.ToArray();
    var Money = table[0].money.ToList();

    string strName = "";
    foreach (string s in Name)
    {
        strName += s + ",";
    }

    strName =  strName.Substring(0, strName.Length - 1);


    var strMoney ="";
    foreach(int m in Money)
    {
        strMoney += m + ",";
    }

    strMoney = strMoney.Substring(0, strMoney.Length - 1);
    
}

<form>
    <input type="hidden" id="txthello" value="@strName" />

    <input type="hidden" id="forMoney" value="@strMoney" />
    


    <div class="card card-info">
        <div class="card-header" style="background-color:#397984">
            <h3 class="card-title">依職位/部門薪水分析</h3>

            @*<div class="card-tools" style="font-size:15px;">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>*@
        </div>
        <div class="card-body">
            <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
            <canvas id="donutChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 764px;" width="764" height="250" class="chartjs-render-monitor"></canvas>
        </div>
        <!-- /.card-body -->
    </div>
</form>

<script>


    $(function () {   //動態圖表
        console.log("aaaaa");
        var s = document.getElementById("txthello").value;
        console.log(s);
        var names = s.split(",");
        console.log(names);



        var a = $("#forMoney").val();
        console.log(a);
        var moneys = a.split(",");
        //var moneys = a
        console.log(moneys);




        // Get context with jQuery - using jQuery's .get() method.
        var donutChartCanvas = $('#donutChart').get(0).getContext('2d')
        var donutData = {
            labels: names,
            datasets: [
                {
                    data:moneys,
                    backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#ab9828'],
                }
            ]
        }
        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        })


    })
</script>