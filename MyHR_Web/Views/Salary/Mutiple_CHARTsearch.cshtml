
@model IEnumerable<MyHR_Web.ViewModel.SalaryChar_Json>
@using MyHR_Web.ViewModel
@using Newtonsoft.Json;

<form>

    <div class="card card-info">
        <div class="card-header" style="background-color:#397984">
            <h3 class="card-title">各部門薪水分析</h3>

            @*<div class="card-tools" style="font-size:15px;">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>*@
        </div>
        <div class="card-body">
            <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
            <canvas id="donutChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 764px;" width="764" height="250" class="chartjs-render-monitor"></canvas>
        </div>
        <!-- /.card-body -->
    </div>
</form>

<script>
    @{
//IEnumerable<SalaryChar_Json> a = JsonConvert.DeserializeObject<SalaryChar_Json>(Model);

//var Monry = table.Select(n => n.money).ToList();
//var Name = table.Select(n => n.name).ToList();


//int[] Arr_Monry = new int[table.Count()];
//string[] Arr_Name = new string[table.Count()];


//for (int i = 0; i < table.Count; i++)
//{

//    Array_Monry[i] = Monry[i];
//}



    }
    console.log("5+65+6654");
    @*console.log(@Monry.Count);
    console.log(@Name);*@
    $(function () {   //圖表


        //var a = $("#1toltal").html();
        //var b = $("#2toltal").html();
        //var c = $("#3toltal").html();
        //var d = $("#4toltal").html();
        //var e = $("#5toltal").html();
        //var f = $("#6toltal").html();



        // Get context with jQuery - using jQuery's .get() method.
        var donutChartCanvas = $('#donutChart').get(0).getContext('2d')
        var donutData = {
            labels: ["aa",'bb','vvvvvvvvvv',"ssssss",'wdwdwdwddw'],
            datasets: [
                {
                    data: [1,2,3,4,5],
                    backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#ab9828'],
                }
            ]
        }
        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        })


    })
</script>