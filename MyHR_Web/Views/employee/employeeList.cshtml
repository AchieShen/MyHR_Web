@model IEnumerable<MyHR_Web.ViewModel.TUserViewModel>

@{
    ViewData["Title"] = "employeeList";
}
<style>
    h2 {
        background-color: #cbb2ae;
        border-left: 5px solid #808080;
        font-family: "微软雅黑", "宋体", "黑体", Arial;
        font-size: 25px;
        height: 80px;
        line-height: 80px;
        font-weight: bold;
        text-shadow: 2px 2px 3px #222222;
        color: #FFFFFF;
        padding-left: 10px;
    }
</style>
<div class="content-wrapper">
    <section class="content-header">
        <h2>員工清單</h2>

    </section>
    <section class="content">
            <div class="row">
                <p>
                    &nbsp;
                    @Html.ActionLink("註冊員工", "register", new { }, new { @type = "button", @class = "btn btn-info", style = "filter: grayscale(50%)" })
                    &emsp;
                    @Html.ActionLink("匯出EXCEL", "ExporttoExcel", new { }, new { @type = "button", @class = "btn btn-primary", style = "filter: grayscale(50%)" })
                    &emsp;
                    <input type="button" id="AllPass" value="勾選離職" class="btn btn-danger" style="filter: grayscale(50%)" />
                </p>
                  
            </div>

            <table table class="table table-bordered table-hover">
                <thead>
                    <tr style="text-align:center">
                        <th>
                            <input type="checkbox" name="CheckAll" value="核取方塊" id="CheckAll" />

                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CPhoto)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CEmployeeId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CEmployeeName)
                        </th>
                        <th style="display:none">
                            @Html.DisplayNameFor(model => model.CEmployeeEnglishName)
                        </th>
                        <th style="display:none">
                            @Html.DisplayNameFor(model => model.CPassWord)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.COnBoardDay)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CByeByeDay)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CGender)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CEmail)
                        </th>
                        <th style="display:none">
                            @Html.DisplayNameFor(model => model.CAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CDepartmentId)
                        </th>
                        <th style="display:none">
                            @Html.DisplayNameFor(model => model.CSupervisor)
                        </th>
                        <th style="display:none">
                            @Html.DisplayNameFor(model => model.CBirthday)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CPhone)
                        </th>

                        <th style="display:none">
                            @Html.DisplayNameFor(model => model.CEmergencyPerson)
                        </th>
                        <th style="display:none">
                            @Html.DisplayNameFor(model => model.CEmergencyContact)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CAccountEnable)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CJobTitleId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.COnBoardStatusId)
                        </th>
                        <th>編輯</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr style="text-align:center">
                            <td>
                                @{ if (item.COnBoardStatusId == 1)
                                    {
                                        <input type="checkbox" name="Checkbox[]" value="@Html.DisplayFor(modelItem => item.CEmployeeId)" id="CheckboxGroup" />}
                                }
                            </td>
                            <td>
                                <img class="img-circle"
                                     src="/Home/ViewPhoto?id=@item.CEmployeeId"
                                     alt="User profile picture"
                                     style="width:80px;height:80px;" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CEmployeeId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CEmployeeName)
                            </td>
                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CEmployeeEnglishName)
                            </td>
                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CPassWord)
                            </td>
                            <td>
                                @*@Html.DisplayFor(modelItem => item.COnBoardDay)*@
                                @Convert.ToString(string.Format("{0:yyyy/MM/dd}", item.COnBoardDay))
                            </td>
                            <td>
                                @*@Html.DisplayFor(modelItem => item.CByeByeDay)*@
                                @Convert.ToString(string.Format("{0:yyyy/MM/dd}", item.CByeByeDay))
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CGender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CEmail)
                            </td>
                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CAddress)
                            </td>
                            <td>
                                @Enum.GetName(typeof(eDepartment), item.CDepartmentId)
                            </td>
                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CSupervisor)
                            </td>
                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CBirthday)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CPhone)
                            </td>

                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CEmergencyPerson)
                            </td>
                            <td style="display:none">
                                @Html.DisplayFor(modelItem => item.CEmergencyContact)
                            </td>
                            <td>
                                @Enum.GetName(typeof(eAccount), item.CAccountEnable)
                            </td>
                            <td>
                                @Enum.GetName(typeof(eJobTitle), item.CJobTitleId)
                            </td>
                            <td>
                                @Enum.GetName(typeof(eOnBoard), item.COnBoardStatusId)
                            </td>
                            <td>
                                @Html.ActionLink("修改", "employeeEdit", new { id = item.CEmployeeId }, new { @class = "btn btn-success", @style = "filter: grayscale(50%)" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
    </section>
    </div>
<script>
    //全選全不選
    $(document).ready(function () {
        $("#CheckAll").click(function () {
            if ($("#CheckAll").prop("checked")) {//如果全選按鈕有被選擇的話（被選擇是true）
                $("input[name='Checkbox[]']").each(function () {
                    $(this).prop("checked", true);//把所有的核取方框的property都變成勾選
                })
            } else {
                $("input[name='Checkbox[]']").each(function () {
                    $(this).prop("checked", false);//把所有的核方框的property都取消勾選
                })
            }
        })
    })

    //勾選離職
    var result = "";
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("AllPass").addEventListener("click", function () {
             result = [];
            var checks = document.getElementsByName("Checkbox[]");

            for (var i = 0; i < checks.length; i++) {
                var check = checks.item(i);

                if (check.checked) {
                    result.push(check.value);
                }
            }
           /* window.alert(result.toString()); *//* console.log(typeof (result));  object */

            $.post(
                    "@Url.Action("updateall")",
                    { "x": JSON.stringify(result) },
                    function (result) {
                        /*console.log(result);*/
                    },"json"
            )
            setTimeout(() => {
                window.location.assign(window.location.href)
            }, 500)
        }, false);
    } , false);


    $.getJSON = function (url, data, callback) {
        $.post(url, data, callback, "json")
    }



</script>

